---
- name: Install Dependencies
  hosts:
    - jump
  become: yes
  gather_facts: yes
  tags:
    - dependencies
  tasks:
    - name: Udate apt cache
      apt:
        update_cache: yes
      tags:
        - dependencies
    - name: Install common dependencies
      apt:
        name: "{{ item }}"
        state: latest
      with_items:
        - apt-transport-https
        - git
        - jq
        - uidmap
        - ufw # TODO: Use physial firewall device instead of ufw on server

- name: Create devops user
  hosts:
    - jump
  become: yes
  gather_facts: yes
  tags:
    - ssh
    - devops
  vars:
    can_sudo: yes
    user_name: devops
    user_password: "{{ devops_password }}"
  roles:
    - user

- name: Setup devops SSH configuration
  hosts:
    - jump
  become: yes
  gather_facts: yes
  tags:
    - ssh
    - devops
  vars:
    user_name: devops
    authorized_keys: "{{ ssh.devops.authoized_keys }}"
    ssh_key: "{{ ssh.devops.key }}"
    ssh_cert: "{{ ssh.devops.cert }}"
    enable_root_login: yes
  roles:
    - ssh

- name: Setup ansible user
  hosts:
    - jump
  become: yes
  gather_facts: yes
  tags:
    - ssh
    - ansible
  vars:
    user_name: ansible
  roles:
    - user

- name: Setup ansible SSH configuration
  hosts:
    - jump
  become: yes
  gather_facts: yes
  tags:
    - ssh
    - ansible
  vars:
    user_name: ansible
    ssh_key: "{{ ssh.ansible.key }}"
    ssh_cert: "{{ ssh.ansible.cert }}"
    enable_root_login: yes
  roles:
    - ssh

#TODO: Require MFA for logins and sudos

- name: Configure UFW
  hosts:
    - jump
  become: yes
  gather_facts: yes
  tags:
    - agent
    - firewall
  tasks:
    - name: Check UFW status
      ansible.builtin.shell: ufw status
      register: ufw_status
      no_log: true
    - name: Enable UFW
      when: "('Status: active' not in ufw_status.stdout) and ((is_jump | default(false)) or (restrict_ssh_from_lan | default(false)))"
      ufw:
        state: enabled
        policy: allow
    - name: Allow SSH from LAN
      no_log: true
      community.general.ufw:
        rule: allow
        port: 22
        proto: tcp
        from_ip: "{{ network.identifier }}.{{ network.subnets.lan }}"
        comment: "Allow SSH from LAN"
    - name: Set incoming policy to deny
      community.general.ufw:
        state: enabled
        policy: deny
        direction: incoming
    - name: Allow outgoing traffic for SSH and Proxy
      community.general.ufw:
        rule: allow
        direction: out
        to_ip: "{{ item.subnet }}"
        proto: tcp
        port: "{{ item.port }}"
      with_items:
        - { subnet: "{{ network.identifier }}.{{ network.subnets.homelab }}", port: 22 }
        - { subnet: "{{ network.proxy | split(':') | first }}/32", port: "{{ network.proxy | split(':') | last }}" }
    - name: Allow outgoing DNS traffic
      community.general.ufw:
        rule: allow
        direction: out
        to_ip: "{{ item }}"
        port: 53
      with_items:
        - "{{ network.dns1 }}/32"
        - "{{ network.dns2 }}/32"
        - '1.1.1.1/32'
        - '1.0.0.1/32'
    - name: Set outgoing policy to deny
      community.general.ufw:
        state: enabled
        policy: deny
        direction: outgoing

- name: Setup GitHub Actions Runner
  hosts:
    - bastion
  become: yes
  gather_facts: yes
  tags:
    - agent
  vars:
    agent_user: ansible
    gh_token: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      31363162373335343336633366663062316566643036353838633131616536343938323464383839
      3866623931626632633133313732353232643239653137640a326231313632646261333337396366
      33633935303238393664616237653965373730326438613365306439646638613638343034393737
      6261373366663435630a616565646530626637656639383233656661393632363963333337663361
      32643366353636326532633139303661373962373233323335306130376131626265
    agent_url: https://github.com/espresso-software
  roles:
    - agent

        
- name: Setup ansible SSH configuration
  hosts:
    - jump
  become: yes
  gather_facts: yes
  tags:
    - ssh
  vars:
    enable_root_login: no
  roles:
    - ssh