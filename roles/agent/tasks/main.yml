---
- name: Check for existing agent
  ansible.builtin.stat:
    path: "{{ agent_directory }}/svc.sh"
  register: agent_svc

- name: Setup proxy variables
  ansible.builtin.lineinfile:
    path: "{{ agent_directory }}/.env"
    line: "{{ item }}"
    create: true
    mode: '0644'
    state: present
  with_items:
    - http_proxy=http://{{ internet_proxy }}
    - https_proxy=http://{{ internet_proxy }}
    - ftp_proxy=ftp://{{ internet_proxy }}
    - proxy=http://{{ internet_proxy }}
    - no_proxy={{ no_proxy }}

- name: Yum install ansible dependencies
  ansible.builtin.command: |
    yum install -y \
      ansible \
      git \
      python3-pip \
      sshpass
  register: yum_install
  changed_when: yum_install.stdout != 'Nothing to do.'

- name: Setup runner
  when: not agent_svc.stat.exists
  block:
    - name: Download github agent
      ansible.builtin.get_url:
        url: https://github.com/actions/runner/releases/download/v2.320.0/actions-runner-linux-x64-2.320.0.tar.gz
        dest: /tmp/actions-runner.tar.gz
        mode: '0644'

    - name: Create agent directory
      ansible.builtin.file:
        path: "{{ agent_directory }}"
        state: directory
        owner: "{{ agent_user }}"
        group: "{{ agent_user }}"
        mode: '0755'

    - name: Extract agent
      ansible.builtin.unarchive:
        src: /tmp/actions-runner.tar.gz
        dest: "{{ agent_directory }}"
        remote_src: true
        mode: '0755'

    - name: Generate runtime token with post request
      no_log: true
      ansible.builtin.uri:
        url: "{{ gh_api_url | default('https://api.github.com') }}/orgs/{{ gh_org | default('espresso-software') }}/actions/runners/registration-token"
        method: POST
        headers:
          Authorization: "Bearer {{ gh_token }}"
          Accept: "application/vnd.github.{{ gh_api_version | default('v3') }}+json"
          Content-Length: 0
          Content-Type: "application/json"
        status_code:
          - 200
          - 201
      register: token_response

    - name: Configure agent
      no_log: true
      changed_when: false
      ansible.builtin.shell: |
        cd {{ agent_directory }}
        chmod +x *.sh
        sudo -u {{ agent_user }} ./config.sh \
          --url {{ agent_url }} \
          --token {{ token_response.json.token }} \
          --unattended \
          --replace \
          --labels ansible

- name: Check for existing agent service
  ansible.builtin.stat:
    path: "{{ agent_directory }}/svc.sh"

- name: Install agent service
  changed_when: false
  ansible.builtin.shell: |
    cd {{ agent_directory }}
    sudo ./svc.sh install {{ agent_user }}
    sudo ./svc.sh start
