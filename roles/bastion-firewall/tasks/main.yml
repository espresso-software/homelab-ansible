---
- name: disable firewalld
  ansible.builtin.systemd:
    name: firewalld
    enabled: no
    state: stopped
  failed_when: false

- name: uninstall firewalld
  ansible.builtin.command: |
    yum remove -y \
      firewalld
  register: yum_install
  changed_when: yum_install.stdout != 'Nothing to do.'

- name: install ufw
  ansible.builtin.command: |
    yum install -y \
      ufw
  register: yum_install
  changed_when: yum_install.stdout != 'Nothing to do.'

- name: check if ufw is enabled
  ansible.builtin.command: ufw status
  register: ufw_status
  ignore_errors: yes
  changed_when: false

- name: enable ufw (startup)
  ansible.builtin.ufw:
    state: enabled
    policy: allow
  when: "ufw_status.stdout == 'Status: inactive'"
  register: ufw_init

- name: enable ufw (runtime)
  ansible.builtin.systemd:
    name: ufw
    enabled: yes
    state: started

- name: remove existing rules
  ansible.builtin.command: ufw --force delete {{ item }}
  when: ufw_init.changed
  with_items: [4, 3, 2, 1]

#TODO: Support changing this to only allow from the bastion subnet for the ansible tower
- name: allow SSH from LAN
  ansible.builtin.ufw:
    rule: allow
    port: "{{ item.port }}"
    proto: "{{ item.proto }}"
    from_ip: "{{ network.identifier }}.{{ network.subnets.lan }}"
    comment: "{{ item.comment }}"
  with_items:
    - { port: 22, proto: 'tcp', comment: 'SSH' }

- name: allow SSH from Bastion
  when: bastion_type == 'tower'
  ansible.builtin.ufw:
    rule: allow
    port: 22
    proto: tcp
    from_ip: "{{ network.identifier }}.{{ network.subnets.bastion }}"
    comment: "Bastion SSH"

- name: allow Cockpit from Bastion
  when: bastion_type == 'tunnel' or bastion_type == 'tower'
  ansible.builtin.ufw:
    rule: allow
    port: 9090
    proto: tcp
    from_ip: "{{ network.identifier }}.{{ network.subnets.bastion }}"

- name: set ufw to default deny
  ansible.builtin.ufw:
    policy: deny
    direction: incoming

- name: allow outbound to http proxy
  ansible.builtin.ufw:
    rule: allow
    port: "{{ network.proxy | split(':') | last }}"
    proto: 'tcp'
    to_ip: "{{ network.proxy | split(':') | first }}/32"
    comment: 'HTTP Proxy'
    direction: out

- name: allow outbound to dns servers
  ansible.builtin.ufw:
    rule: allow
    port: 53
    proto: 'any'
    to_ip: "{{ item }}/32"
    comment: 'DNS'
    direction: out
  with_items:
    - "{{ network.dns1 }}"
    - "{{ network.dns2 }}"
    - "1.1.1.1"
    - "1.0.0.1"

- name: allow outbound ssh to lab servers
  ansible.builtin.ufw:
    rule: allow
    port: 22
    proto: 'tcp'
    to_ip: "{{ network.identifier }}.{{ network.subnets.homelab }}"
    comment: 'SSH to LAB'
    direction: out

- name: limit outbound traffic
  ansible.builtin.ufw:
    policy: deny
    direction: outgoing