---
- name: Check UFW status
  ansible.builtin.shell: ufw status
  register: ufw_status
  no_log: true
  changed_when: false

- name: Initial UFW setup
  when: "('Status: active' not in ufw_status.stdout)"
  block:
    - name: Enable UFW
      ansible.builtin.ufw:
        state: enabled
        policy: allow
    
    - name: Allow SSH from LAN
      ansible.builtin.ufw:
        rule: allow
        direction: in
        port: 22
        proto: tcp
        from_ip: "{{ network.identifier }}.{{ network.subnets.lan }}"
        comment: "SSH from LAN"
    
- name: Allow SSH from Bastions
  ansible.builtin.ufw:
    rule: allow
    direction: in
    port: 22
    proto: tcp
    from_ip: "{{ network.identifier }}.{{ network.subnets.bastion }}"
    comment: "SSH from Bastions"

- name: Enforce UFW policy
  ansible.builtin.ufw:
    policy: deny
    direction: incoming
    comment: "Deny all incoming traffic"

- name: Check for 50-cloud-init.yaml
  ansible.builtin.stat:
    path: /etc/netplan/50-cloud-init.yaml
  register: netplan_file

- name: Set netplan file permissions
  when: netplan_file.stat.exists
  ansible.builtin.file:
    path: /etc/netplan/50-cloud-init.yaml
    owner: root
    group: root
    mode: 0600

- name: Set static ip
  when: static_ip is defined
  ansible.builtin.copy:
    content: |
      network:
        version: 2
        renderer: networkd
        ethernets:
          {{ ethernet.device }}:
            dhcp4: false
            addresses:
              - "{{ static_ip }}/{{ network.subnet | split('/') | last }}"
            routes:
              - to: default
                via: "{{ network.gateway }}"
            nameservers:
              addresses:
                - "{{ network.dns1 }}"
                - "{{ network.dns2 }}"
                - 1.1.1.1
                - 1.0.0.1
    dest: /etc/netplan/99-nodecfg.yaml
  notify: apply netplan