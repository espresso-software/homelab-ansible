---
- name: Create user
  ansible.builtin.user:
    name: "{{ user_name }}"
    shell: /bin/bash
    home: "/home/{{ user_name }}"
    createhome: yes
    state: present

- name: Change the user password
  when: user_password is defined
  block:
    - name: Create temporary password file
      ansible.builtin.tempfile:
        state: file
        suffix: .password
      register: temp_password_file
      changed_when: false
    
    - name: Write password to file
      no_log: true
      ansible.builtin.copy:
        content: "{{ user_name }}:{{ user_password }}\n"
        dest: "{{ temp_password_file.path }}"
        mode: 0600
      changed_when: false
    
    - name: Set user password
      ansible.builtin.shell: chpasswd < {{ temp_password_file.path }}
      changed_when: false
  always:
    - name: Remove temporary password file
      ansible.builtin.file:
        path: "{{ temp_password_file.path }}"
        state: absent
      changed_when: false

- name: Lock user password
  when: user_password is not defined
  ansible.builtin.user:
    name: "{{ user_name }}"
    password: '!'

- name: Setup user for sudo
  when: can_sudo | default(false)
  block:
    - name: Add user to sudo group - Fedora
      when: ansible_os_family == 'RedHat'
      ansible.builtin.user:
        name: "{{ user_name }}"
        groups: wheel
        append: yes
    
    - name: Add user to sudo group - Debian
      when: ansible_os_family == 'Debian'
      ansible.builtin.user:
        name: "{{ user_name }}"
        groups: sudo
        append: yes
    
    - name: Allow sudo
      ansible.builtin.lineinfile:
        dest: "/etc/sudoers.d/{{ user_name }}"
        line: "{{ user_name }} ALL=(ALL) ALL"
        owner: root
        group: root
        mode: 0440
        create: yes

- name: Create SSH directory
  ansible.builtin.file:
    path: "/home/{{ user_name }}/.ssh"
    state: directory
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
    mode: 0700

- name: Setup user authorized keys
  when: (authorized_keys is defined) | default(false)
  ansible.builtin.copy:
    content: "{{ authorized_keys }}"
    dest: "/home/{{ user_name }}/.ssh/authorized_keys"
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
    mode: 0600

- name: Setup user SSH key
  when: (ssh_key is defined) | default(false)
  ansible.builtin.copy:
    content: "{{ ssh_key }}\n"
    dest: "/home/{{ user_name }}/.ssh/id_ed25519"
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
    mode: 0600

- name: Setup user SSH certificate
  when: (ssh_cert is defined) | default(false)
  ansible.builtin.copy:
    content: "{{ ssh_cert }}"
    dest: "/home/{{ user_name }}/.ssh/id_ed25519.pub"
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
    mode: 0644